# References:https://qiita.com/okubot55/items/b18a5dd5166f1ec2696c
# Memo:This template has a single AZ configuration.
AWSTemplateFormatVersion: "2010-09-09"
Description: 
  VPC and Subnet RDS Oracle Create

Metadata: 
  "AWS::CloudFormation::Interface": 
    ParameterGroups: 
      - Label: 
          default: "Project Name Prefix"
        Parameters: 
          - PJPrefix
      - Label: 
          default: "Network Configuration"
        Parameters: 
          - VPCCIDR
          - PublicSubnetCIDR
          - PublicSubnetcCIDR

    ParameterLabels: 
      VPCCIDR: 
        default: "VPC CIDR"
      PublicSubnetCIDR: 
        default: "PublicSubnet CIDR"
      PublicSubnetcCIDR: 
        default: "PublicSubnet C CIDR"

# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------# 
Parameters:
  PJPrefix:
    Type: String

  VPCCIDR:
    Type: String
    Default: "10.1.0.0/16"

  PublicSubnetCIDR:
    Type: String
    Default: "10.1.10.0/24"

  PublicSubnetcCIDR:
    Type: String
    Default: "10.1.11.0/24"

  # KeyName:
  #   Description: The EC2 Key Pair to allow SSH access to the instance
  #   Type: "AWS::EC2::KeyPair::KeyName"

  # MyIP:
  #   Description: IP address allowed to access EC2
  #   Type: String

Resources: 
# ------------------------------------------------------------#
#  VPC
# ------------------------------------------------------------#
# VPC Create
  VPC: 
    Type: "AWS::EC2::VPC"
    Properties: 
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      InstanceTenancy: default
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-vpc"

# InternetGateway Create
  InternetGateway: 
    Type: "AWS::EC2::InternetGateway"
    Properties: 
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-igw"

# IGW Attach
  InternetGatewayAttachment: 
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC 

# ------------------------------------------------------------#
#  Subnet
# ------------------------------------------------------------#          
# Public Subnet A Create
  PublicSubnet: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      AvailabilityZone: "ap-northeast-1a"
      CidrBlock: !Ref PublicSubnetCIDR
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-public-subnet"
                    
# Public Subnet C Create
  PublicSubnetC: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      AvailabilityZone: "ap-northeast-1c"
      CidrBlock: !Ref PublicSubnetcCIDR
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-public-c-subnet"
# ------------------------------------------------------------#
#  RouteTable
# ------------------------------------------------------------#          
# Public RouteTable Create
  PublicRouteTable: 
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-public-route"

# ------------------------------------------------------------#
# Routing
# ------------------------------------------------------------# 
# PublicRoute Create
  PublicRoute: 
    Type: "AWS::EC2::Route"
    Properties: 
      RouteTableId: !Ref PublicRouteTable 
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway 

# ------------------------------------------------------------#
# RouteTable Associate
# ------------------------------------------------------------# 
# PublicRouteTable Associate Subnet
  PublicSubnetRouteTableAssociation: 
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      SubnetId: !Ref PublicSubnet 
      RouteTableId: !Ref PublicRouteTable

# PublicRouteTable Associate Subnet C
  PublicSubnetcRouteTableAssociation: 
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      SubnetId: !Ref PublicSubnetC 
      RouteTableId: !Ref PublicRouteTable
# ------------------------------------------------------------#
# SecurityGroup
# ------------------------------------------------------------# 
# SG
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: handson-RDS-sg-cf
      GroupDescription: Allow Oracle Port access ALL IPs
      VpcId: !Ref VPC
      SecurityGroupIngress:
        # ssh
        - IpProtocol: tcp
          FromPort: 1521
          ToPort: 1521
          CidrIp: 0.0.0.0/0
# ------------------------------------------------------------#
# RDS SubnetGroup
# ------------------------------------------------------------#
# RDS SubnetGroup 
  MyDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: handson-rds-gr
      DBSubnetGroupName: handson-rds-gr
      SubnetIds:
      - !Ref PublicSubnet
      - !Ref PublicSubnetC

# ------------------------------------------------------------#
# RDS
# ------------------------------------------------------------# 
# RDS
  MyDB:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: '20'
      DBInstanceClass: db.m5.large
      DBInstanceIdentifier: database-1
      DBName: ORCL
      DBSubnetGroupName: !Ref 'MyDBSubnetGroup'
      Engine: oracle-ee
      MasterUsername: admin
      MasterUserPassword: HandsONPassword
      PubliclyAccessible: 'true'
      VPCSecurityGroups:
      - Ref: SecurityGroup
    DeletionPolicy: Delete

# ------------------------------------------------------------#
# Output Parameters
# ------------------------------------------------------------#                
Outputs:
# VPC
  VPC:
    Value: !Ref VPC
    Export:
      Name: !Sub "${PJPrefix}-vpc"

  VPCCIDR:
    Value: !Ref VPCCIDR
    Export:
      Name: !Sub "${PJPrefix}-vpc-cidr"

# Subnet
  PublicSubnet:
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub "${PJPrefix}-public-subnet"

  PublicSubnetC:
    Value: !Ref PublicSubnetC
    Export:
      Name: !Sub "${PJPrefix}-public-subnetC"

  PublicSubnetACIDR:
    Value: !Ref PublicSubnetCIDR
    Export:
      Name: !Sub "${PJPrefix}-public-subnet-cidr"

  PublicSubnetCCIDR:
    Value: !Ref PublicSubnetcCIDR
    Export:
      Name: !Sub "${PJPrefix}-public-subnet-c-cidr"

# Route
  PublicRouteTable:
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub "${PJPrefix}-public-route"

# RDSEndpointAddress:
  RDSEndpointAddress:
    Value: !GetAtt MyDB.Endpoint.Address
    Description: Public IP of RDS instance
